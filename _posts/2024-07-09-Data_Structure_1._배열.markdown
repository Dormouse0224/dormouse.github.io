---
layout: post
title: Data Structure 1. 배열
date: 2024-07-09 18:00:00 +0900
category: Data_Structure
---

## 1. 배열

1. [정의](#1-정의)
2. [동적 배열](#2-동적-배열)

---

<br><br>

>### 1. 정의

배열(Array)은 인덱스와 인덱스에 대응하는 데이터로 이루어진 자료구조이다.

특징으로, 배열은 데이터가 연속적인 공간에 저장되며, 이에 따라 주소값도 연속적이다.

그래서 인덱스 번호만 있으면 첫 주소에 합연산으로 해당 인덱스에 해당하는 데이터로의 접근이 매우 빠른 장점이 있다.

단, 배열은 데이터를 연속적인 공간에서 관리해야 한다는 특징으로 인해 중간의 데이터를 삭제하거나 중간에 삽입하려고 하면 그 뒤에 존재하는 모든 데이터를 밀거나 당겨서 자리를 옮겨 연속성을 유지시켜야 하므로, 중간의 데이터에 대한 삽입과 삭제는 힘들다.

그리고 저장되어 있는 데이터의 탐색도 비효율적이다. 특정 데이터를 배열 내에서 찾는다고 할 때, 배열은 모든 데이터를 확인해야 하므로 느린 탐색 속도를 보인다.

<br> 

||배열||
|데이터 작업||시간복잡도|
|:---:||:---:|
|접근||$O(1)$|
|탐색||$O(n)$|
|삽입||$O(n)$|
|삭제||$O(n)$|

---

<br><br>

>### 2. 동적 배열

동적 배열은 C++ STL에서 `vector` 라는 타입으로 지원되며, 코드 내에서 `arr[n]` 으로 스택 영역에 선언되는 크기가 고정된 정적 배열과는 달리 힙 영역에서 동적 할당을 통해 선언되는 유동적인 크기의 배열을 의미한다.



---