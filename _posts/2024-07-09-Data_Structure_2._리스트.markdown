---
layout: post
title: Data Structure 2. 리스트
date: 2024-07-09 18:00:00 +0900
category: Data_Structure
---

## 1. 배열

1. [정의](#1-배열)
2. [연결 리스트 구현](#2-연결-리스트-구현)

---

<br><br>

리스트 자료구조는 연결 리스트(Linked List) 라고도 불리며, 데이터를 하나의 노드에 담아서 이 노드에 다음 데이터가 담긴 노드 주소를 같이 저장해 자료를 저장하는 방식이다.

리스트는 배열과 비교하여 연속적인 공간에 배정될 필요가 없고 각 노드는 개별적인 주소를 갖고 있기 때문에 데이터의 추가 및 제거가 용이하다. 다만 배열에 비해 자료가 노드 별로 주소가 별도로 존재하고 다음 자료에 대한 주소를 이전 노드가 가지고 있기에 특정 자료로의 접근이 순차적인 탐색이 이루어져야 가능하다.

또한 매번 공간을 미리 할당받아야 하는 배열과는 달리 각 노드 별로 공간을 차지하기에 데이터가 추가될 때마다 노드 공간을 할당해 주면 되므로 낭비되는 공간이 없고 필요한 만큼만 공간을 할당받아 사용한다.

만약 노드가 다음 노드의 주소 뿐만 아니라 이전 노드의 주소도 갖고 있다면 이는 이중 연결 리스트라고 하며, 마지막 노드의 포인터가 null 이 아닌 처음 노드를 다시 가리킨다면 순환 연결 리스트라고 한다.

C++의 STL에서 `list` 라는 템플릿을 제공한다.

<br> 

||연결 리스트||
|데이터 작업||시간복잡도|
|:---:||:---:|
|접근||$O(n)$|
|탐색||$O(n)$|
|삽입||$O(1)$|
|삭제||$O(1)$|

---

<br><br>

>### 2. 연결 리스트 구현



---